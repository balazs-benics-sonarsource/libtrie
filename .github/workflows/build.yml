name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Sonar cache
        id: sonar-cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        if: steps.sonar-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar
      - name: Cache Sonar build wrapper
        id: sonar-wrapper
        uses: actions/cache@v3
        with:
          path: ~/.sonar/build-wrapper-linux-x86
          key: ${{ runner.os }}-sonar-wrapper
      - name: Download and set up build-wrapper
        if: steps.sonar-wrapper.outputs.cache-hit != 'true'
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar
      - name: Run build-wrapper
        run: |
          cmake -S . -B build -DCMAKE_CXX_FLAGS="--coverage"
          $HOME/.sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 \
            --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
            cmake --build build/ --config Release
      - name: Collect coverage data
        run: |
          ./build/libtrie-example
          mkdir coverage-dir
          cd coverage-dir
          find ../build/ -name '*.o' | xargs gcov --preserve-paths
          cd ..
      - name: Cache cfamily artifacts
        id: sonar-cfamily-artifacts
        uses: actions/cache@v3
        with:
          path: .sonar-cfamily-cache
          key: ${{ runner.os }}-sonar-cfamily-cache
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin/sonar-scanner \
            --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.cfamily.gcov.reportsPath="coverage-dir" \
            --define sonar.cfamily.cache.enabled=true \
            --define sonar.cfamily.cache.path=.sonar-cfamily-cache

